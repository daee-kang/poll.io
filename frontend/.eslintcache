[{"/Users/progamer/Desktop/poll.io/frontend/src/index.tsx":"1","/Users/progamer/Desktop/poll.io/frontend/src/reportWebVitals.ts":"2","/Users/progamer/Desktop/poll.io/frontend/src/App.tsx":"3","/Users/progamer/Desktop/poll.io/frontend/src/Auth.tsx":"4","/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/LandingPage.tsx":"5","/Users/progamer/Desktop/poll.io/frontend/src/Types.ts":"6","/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/Login.tsx":"7","/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/Signup.tsx":"8","/Users/progamer/Desktop/poll.io/frontend/src/api.ts":"9","/Users/progamer/Desktop/poll.io/frontend/src/Pages/Home/Home.tsx":"10","/Users/progamer/Desktop/poll.io/frontend/src/Components/LogoutFunction.tsx":"11","/Users/progamer/Desktop/poll.io/frontend/src/Components/LogoutButton.tsx":"12"},{"size":594,"mtime":1607674229596,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1607409258439,"results":"15","hashOfConfig":"14"},{"size":2140,"mtime":1609027843074,"results":"16","hashOfConfig":"14"},{"size":414,"mtime":1607672327259,"results":"17","hashOfConfig":"14"},{"size":1761,"mtime":1607933057600,"results":"18","hashOfConfig":"14"},{"size":54,"mtime":1607904724917,"results":"19","hashOfConfig":"14"},{"size":2098,"mtime":1608518175030,"results":"20","hashOfConfig":"14"},{"size":4673,"mtime":1608517788749,"results":"21","hashOfConfig":"14"},{"size":373,"mtime":1608428573343,"results":"22","hashOfConfig":"14"},{"size":260,"mtime":1609027852406,"results":"23","hashOfConfig":"14"},{"size":447,"mtime":1609027370365,"results":"24","hashOfConfig":"14"},{"size":430,"mtime":1609027855896,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"m75vdt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/progamer/Desktop/poll.io/frontend/src/index.tsx",[],["55","56"],"/Users/progamer/Desktop/poll.io/frontend/src/reportWebVitals.ts",[],"/Users/progamer/Desktop/poll.io/frontend/src/App.tsx",["57","58","59","60"],"import React, { ElementType, useEffect, useState } from 'react'\nimport './App.css';\nimport { BrowserRouter, Route, Link, Redirect, Switch } from 'react-router-dom'\nimport Auth from './Auth'\nimport LandingPage from './Pages/LandingPage/LandingPage'\nimport Home from './Pages/Home/Home'\nimport LogoutFunction from './Components/LogoutFunction'\nimport { LANDINGPAGESTATE } from './Types'\n\ntype RenderProps = {\n  component: ElementType\n  path?: string\n  toggleAuthenticateStatus?: () => void\n  // All other props\n  [x: string]: any;\n}\n\n//these are template routes for rendering pages\nconst PrivateRoute: React.FC<RenderProps> = ({ component: Component, ...rest }) => {\n  return <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n        <Redirect to={{\n          pathname: '/',\n          state: { from: props.location }\n        }} />\n      )\n  )} />\n}\n\nconst LoggedOutRoute = ({ component: Component, ...rest }: RenderProps) => {\n  return <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/home',\n        state: { from: props.location }\n      }} />\n    ) : (\n        <Component {...props} {...rest} />\n      )\n  )} />\n}\n\nconst PropsRoute = ({ component: Component, ...rest }: RenderProps) => {\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )} />\n}\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState<boolean>(false)\n\n  useEffect(() => {\n    toggleAuthenticatedStatus()\n  }, [])\n\n  const toggleAuthenticatedStatus = () => {\n    setAuthenticated(Auth.isUserAuthenticated())\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <LoggedOutRoute path=\"/\" exact component={LandingPage} />\n        <LoggedOutRoute path=\"/login\" component={LandingPage} state={LANDINGPAGESTATE.LOGIN} />\n        <LoggedOutRoute path=\"/signup\" component={LandingPage} state={LANDINGPAGESTATE.SIGNUP} />\n        <PrivateRoute path=\"/home\" component={Home} />\n        <Route path=\"/logout\" component={LogoutFunction} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/progamer/Desktop/poll.io/frontend/src/Auth.tsx",[],"/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/LandingPage.tsx",[],"/Users/progamer/Desktop/poll.io/frontend/src/Types.ts",[],"/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/Login.tsx",["61","62"],"import React, { ReactElement, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { api, stringify, header } from '../../api'\nimport Auth from '../../Auth'\nimport styles from './LandingPage.module.scss'\n\n\nexport default function Login(): ReactElement {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n    const [redirect, setRedirect] = useState(false)\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        api.post('/login', stringify({\n            username,\n            password\n        }), header).then(response => {\n            if (response.status === 200) {\n                Auth.authenticateUser(response.data.token)\n\n                setRedirect(true)\n            }\n        }).catch(error => {\n            console.log(error.response)\n        })\n    }\n\n    return (\n        <div id={styles.loginPage}>\n            <div className={styles.title}>\n                LOG IN UP THIS BITCH\n            </div>\n            <form className={styles.form} onSubmit={handleSubmit}>\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Username\n                    <input className={styles.textbox} type=\"text\" name=\"username\"\n                        value={username} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setUsername(event.target.value)\n                        }} />\n                </label>\n\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Password\n                    <input className={styles.textbox} type=\"password\" name=\"password\"\n                        value={password} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPassword(event.target.value)\n                        }} />\n                </label>\n\n                <button className={styles.submit} type=\"submit\" >Login</button>\n            </form>\n\n\n            {redirect ? <Redirect to=\"/\" /> : null}\n        </div>\n    )\n}\n","/Users/progamer/Desktop/poll.io/frontend/src/Pages/LandingPage/Signup.tsx",["63"],"import React, { ReactElement, useEffect, useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { api, stringify, header } from '../../api'\nimport Auth from '../../Auth'\nimport styles from './LandingPage.module.scss'\n\nexport default function Signup(): ReactElement {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n    const [redirect, setRedirect] = useState(false)\n\n    useEffect(() => {\n        console.log(error)\n    }, [error])\n\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        setError(\"\")\n        if (checkForLocalErrors()) {\n            console.log(\"here\")\n            return\n        }\n\n        api.post('/signup', stringify({\n            username,\n            email,\n            password,\n        }), header).then(response => {\n            if (response.data.name === \"MongoError\") {\n                if (response.data.keyValue[\"username\"] !== undefined) {\n                    //username is taken\n                    setError(\"Username taken\")\n                } else if (response.data.keyValue[\"email\"] !== undefined) {\n                    //email is taken\n                    setError(\"Email in use\")\n                }\n            } else {\n                setRedirect(true)\n            }\n        }).catch(error => {\n            console.log(error.response)\n        })\n    }\n\n    //return true if there are errors\n    const checkForLocalErrors = (): boolean => {\n        let index = 0\n        let out = \"\"\n\n        if (!validateEmail(email)) {\n            out += `${++index}. Not a valid email.\\r\\n`\n        }\n\n        let res = validatePassword(out, index)\n        out = res.out\n        index = res.index\n\n        setError(out)\n        console.log(error)\n\n        return out === \"\" ? false : true\n    }\n\n    const validatePassword = (out: string, index: number): { out: string, index: number } => {\n        if (password.length < 8 || password.length > 16) {\n            out += `${++index}. Password is must be between 8-16 characters.\\r\\n`\n        }\n\n        return { out, index }\n    }\n\n    const validateEmail = (email: string): boolean => {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    return (\n        <div id={styles.signupPage}>\n            <div className={styles.title}>\n                Start polling 😎\n            </div>\n            <div className={`${styles.error} ${error === \"\" ? styles.hide : null}`}>\n                {error}\n            </div>\n            <form className={styles.form} onSubmit={handleSubmit}>\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Username\n                    <input className={styles.textbox} type=\"text\" name=\"username\"\n                        value={username} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setUsername(event.target.value)\n                        }} />\n                </label>\n\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Email\n                    <input className={styles.textbox} type=\"text\" name=\"email\"\n                        value={email} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setEmail(event.target.value)\n                        }} />\n                </label>\n\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Password\n                    <input className={styles.textbox} type=\"password\" name=\"password\"\n                        value={password} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setPassword(event.target.value)\n                        }} />\n                </label>\n\n                <label className={styles.label}>\n                    &nbsp;&nbsp;Confirm Password\n                    <input className={styles.textbox} type=\"password\" name=\"password\"\n                        value={confirmPassword} onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                            setConfirmPassword(event.target.value)\n                        }} />\n                </label>\n\n                <button className={styles.submit} type=\"submit\" >Sign up &nbsp;➞</button>\n            </form>\n            {redirect ? <Redirect to=\"/login\" /> : null}\n        </div>\n    )\n}\n","/Users/progamer/Desktop/poll.io/frontend/src/api.ts",[],"/Users/progamer/Desktop/poll.io/frontend/src/Pages/Home/Home.tsx",["64"],"import React, { ReactElement } from 'react'\nimport LogoutButton from '../../Components/LogoutButton'\n\ninterface Props {\n\n}\n\nexport default function Home({ }: Props): ReactElement {\n    return (\n        <div>\n            <LogoutButton />\n        </div>\n    )\n}\n","/Users/progamer/Desktop/poll.io/frontend/src/Components/LogoutFunction.tsx",[],"/Users/progamer/Desktop/poll.io/frontend/src/Components/LogoutButton.tsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":23},{"ruleId":"69","severity":1,"message":"73","line":3,"column":32,"nodeType":"71","messageId":"72","endLine":3,"endColumn":36},{"ruleId":"69","severity":1,"message":"74","line":45,"column":7,"nodeType":"71","messageId":"72","endLine":45,"endColumn":17},{"ruleId":"69","severity":1,"message":"75","line":52,"column":10,"nodeType":"71","messageId":"72","endLine":52,"endColumn":23},{"ruleId":"69","severity":1,"message":"76","line":11,"column":12,"nodeType":"71","messageId":"72","endLine":11,"endColumn":17},{"ruleId":"69","severity":1,"message":"77","line":11,"column":19,"nodeType":"71","messageId":"72","endLine":11,"endColumn":27},{"ruleId":"69","severity":1,"message":"78","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":8,"column":30,"nodeType":"81","messageId":"82","endLine":8,"endColumn":40},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'PropsRoute' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Auth' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]